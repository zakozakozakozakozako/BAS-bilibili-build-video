name: Video Frame Color Segmentation (2

on:
  workflow_dispatch:
    inputs:
      video_file:
        description: '视频文件名（仓库根目录，或用下方artifact名称下载）'
        required: true
        default: 'input.mp4'
      fps:
        description: '帧率'
        required: true
        default: '1'
      artifact_name:
        description: '（可选）若视频不在仓库，填写Artifact名称以下载'
        required: false
      W:
        description: "画布宽"
        required: true
        default: "4000"
      H:
        description: "画布高"
        required: true
        default: "3620"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          pip install pillow
          sudo apt-get update
          sudo apt-get install -y potrace
          npm install commander cli-progress ora

      - name: 1) Extract frames with ffmpeg
        run: |
          rm -rf frames/*
          ffmpeg -y -i "${{ inputs.video_file }}" -vf "fps=${{ inputs.fps }}" frames/frame_%06d.png

      - name: 2) Convert frames -> SVG (Python)
        run: |
          python convert_frames_to_svg.py

      - name: 2.5) Rename SVGs by color
        run: |
          mkdir -p guanjia/converted_svgs_renamed
          for f in guanjia/converted_svgs/*.svg; do
            # 提取 fill 颜色，取第一个匹配
            color=$(grep -o 'fill="#[0-9A-Fa-f]\{6\}"' "$f" | head -n1 | cut -d'"' -f2 | sed 's/#//')
            if [ -z "$color" ]; then
              color="000000" # 默认黑色
            fi
            newname="${color}.svg"
            cp "$f" "guanjia/converted_svgs_renamed/$newname"
            echo "Renamed $(basename "$f") -> $newname"
          done
          echo "重命名完成，全部放到 guanjia/converted_svgs_renamed"

      - name: 3) 批量转换 SVG（Node）
        run: |
          node 2-批量转换svg.js -d guanjia/converted_svgs_renamed
        env:
          OUT_DIR: ${{ github.workspace }}/guanjia/converted_svgs_final

      - name: 4) Compat symlinks for legacy script
        run: |
          rm -rf video_frames
          mkdir -p video_frames
          ln -s ../frames video_frames
          ln -s ../guanjia/converted_svgs_renamed video_frames/converted_svgs
          echo "Compat symlinks created:"
          ls -la video_frames

      - name: 5) 生成 JSON（Node）
        run: |
          node 3-批量转换json.js -d guanjia/converted_svgs_renamed > guanjia/output.json
        env:
          W: ${{ inputs.W }}
          H: ${{ inputs.H }}

      - name: 6) JSON -> bas 弹幕（Node）
        run: |
          node 4-json数据转换bas弹幕.js -w $W10 -h $H10 > guanjia/bas.txt
        env:
          W: ${{ inputs.W }}
          H: ${{ inputs.H }}
          W10: ${{ inputs.W }}0
          H10: ${{ inputs.H }}0

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: guanjia/